--// Vico (Rudert) Recode
print("Script that i will revive!")
wait(2)

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "LoadingScreen"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(1, 0, 1, 0)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.BackgroundTransparency = 0.6
frame.Parent = screenGui

local uiGradient = Instance.new("UIGradient")
uiGradient.Parent = frame
uiGradient.Color = ColorSequence.new(Color3.fromRGB(0, 0, 0), Color3.fromRGB(50, 50, 50))
uiGradient.Rotation = 45

local textLabel = Instance.new("TextLabel")
textLabel.Text = "Credit: Rudert and Flezzpe"
textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
textLabel.TextSize = 50
textLabel.TextStrokeTransparency = 0.6
textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
textLabel.TextWrapped = true
textLabel.Size = UDim2.new(0, 550, 0, 200)
textLabel.Position = UDim2.new(0.5, -250, 0.5, -75)
textLabel.TextXAlignment = Enum.TextXAlignment.Center
textLabel.TextYAlignment = Enum.TextYAlignment.Center
textLabel.Parent = frame

local border = Instance.new("UICorner")
border.CornerRadius = UDim.new(0, 10)
border.Parent = textLabel

local shadow = Instance.new("Frame")
shadow.Size = UDim2.new(1, 6, 1, 6)
shadow.Position = UDim2.new(0, 3, 0, 3)
shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shadow.BackgroundTransparency = 0.5
shadow.ZIndex = textLabel.ZIndex - 1
shadow.Parent = textLabel

local tweenService = game:GetService("TweenService")

local fadeInTweenInfo = TweenInfo.new(1.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
local fadeInTween = tweenService:Create(textLabel, fadeInTweenInfo, {TextTransparency = 0, Position = UDim2.new(0.5, -250, 0.5, -75)})

local moveUpTweenInfo = TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
local moveUpTween = tweenService:Create(textLabel, moveUpTweenInfo, {Position = UDim2.new(0.5, -250, 0.5, -150)})

local fadeOutTweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quart, Enum.EasingDirection.In)
local fadeOutTween = tweenService:Create(textLabel, fadeOutTweenInfo, {TextTransparency = 1})

fadeInTween:Play()

fadeInTween.Completed:Connect(function()
    wait(1)
    moveUpTween:Play()

    moveUpTween.Completed:Connect(function()
        fadeOutTween:Play()

        fadeOutTween.Completed:Connect(function()
            screenGui:Destroy()
        end)
    end)
end)


local version = 'Beta'

print('nurysium llc. - https://dsc.gg/nurysium')
print(version)
warn('not availabe for all this is beta version...')

local Stats = game:GetService('Stats')
local Players = game:GetService('Players')
local RunService = game:GetService('RunService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local TweenService = game:GetService('TweenService')
local VirtualUser =
game:GetService("VirtualUser")
local Nurysium_Util = loadstring(game:HttpGet('https://raw.githubusercontent.com/flezzpe/Nurysium/main/nurysium_helper.lua'))()

local local_player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local SpeedFactor
local speedFactorPingBased
local nurysium_Data = nil
local hit_Sound = nil

local closest_Entity = nil
local parry_remote = nil

getgenv().visualize_Enabled = false
getgenv().auto_curve_Enabled = false
getgenv().aura_Enabled = false
getgenv().hit_sound_Enabled = false
getgenv().hit_effect_Enabled = false
getgenv().night_mode_Enabled = false
getgenv().trail_Enabled = false
getgenv().self_effect_Enabled = false
getgenv().kill_effect_Enabled = false
getgenv().shaders_effect_Enabled = false
getgenv().ai_Enabled = false
getgenv().spectate_Enabled = false

local Services = {
	game:GetService('AdService'),
	game:GetService('SocialService')
}

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/flezzpe/Nurysium/main/nurysium_ui.lua"))()
task.wait(0.5)

library:init("VicoXNurysium", game:GetService("UserInputService").TouchEnabled, game:GetService("CoreGui"))

library:create_section("Combat", 17440545793)
library:create_section("World", 17440865331)
--// library:create_section("Misc", 17440868530)
--// library:create_section("Settings", 17440866925)

function initializate(dataFolder_name: string)
	local nurysium_Data = Instance.new('Folder', game:GetService('CoreGui'))
	nurysium_Data.Name = dataFolder_name

	hit_Sound = Instance.new('Sound', nurysium_Data)
	hit_Sound.SoundId = 'rbxassetid://6607204501'
	hit_Sound.Volume = 6
end

local function get_closest_entity(Object: Part)
	task.spawn(function()
		local closest
		local max_distance = math.huge

		for index, entity in workspace.Alive:GetChildren() do
			if entity.Name ~= Players.LocalPlayer.Name then
				local distance = (Object.Position - entity.HumanoidRootPart.Position).Magnitude

				if distance < max_distance then
					closest_Entity = entity
					max_distance = distance
				end

			end
		end

		return closest_Entity
	end)
end

local function get_center()
	for _, object in workspace.Map:GetDescendants() do
		if object.Name == 'BALLSPAWN' then
			return object
		end
	end
end

function resolve_parry_Remote()
 local temp_remote = game:GetService("VirtualUser"):WaitForChild("\n\n\n\n\n")

    if not temp_remote then
        return
    end

    if not temp_remote:IsA('RemoteEvent') then
        return
    end

    parry_remote = temp_remote
end

resolve_parry_Remote()

function walk_to(position)

local_player.Character.Humanoid:MoveTo(position)
end

library:create_toggle("Visualizer", "Combat", function(toggled)
	getgenv().visualize_Enabled = toggled
end)

library:create_toggle("Curve", "Combat", function(toggled)
	getgenv().auto_curve_Enabled = toggled
end)

library:create_toggle("Attack Aura", "Combat", function(toggled)
	getgenv().aura_Enabled = toggled
end)

library:create_toggle("AI", "Combat", function(toggled)
	getgenv().ai_Enabled = toggled
end)

library:create_toggle("Hit Sound", "Combat", function(toggled)
	getgenv().hit_sound_Enabled = toggled
end)

library:create_toggle("Hit Effect", "World", function(toggled)
	getgenv().hit_effect_Enabled = toggled
end)

library:create_toggle("Night Mode", "World", function(toggled)
	getgenv().night_mode_Enabled = toggled
end)

library:create_toggle("Trail", "World", function(toggled)
	getgenv().trail_Enabled = toggled
end)

library:create_toggle("Self Effect", "World", function(toggled)
	getgenv().self_effect_Enabled = toggled
end)

library:create_toggle("Kill Effect", "World", function(toggled)
	getgenv().kill_effect_Enabled = toggled
end)

library:create_toggle("Shaders", "World", function(toggled)
	getgenv().shaders_effect_Enabled = toggled
end)

library:create_toggle("Spectate Ball", "World", function(toggled)
	getgenv().spectate_Enabled = toggled
end)

--// kill effect

function play_kill_effect(Part)
	task.defer(function()
		local bell = game:GetObjects("rbxassetid://17519762269")[1]

		bell.Name = 'Yeat_BELL'
		bell.Parent = workspace

		bell.Position = Part.Position - Vector3.new(0, 20, 0)
		bell:WaitForChild('Sound'):Play()

		TweenService:Create(bell, TweenInfo.new(0.85, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {
			Position = Part.Position + Vector3.new(0, 10, 0)
		}):Play()

		task.delay(5, function()
			TweenService:Create(bell, TweenInfo.new(1.75, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {
				Position = Part.Position + Vector3.new(0, 100, 0)
			}):Play()
		end)

		task.delay(6, function()
			bell:Destroy()
		end)
	end)
end

task.defer(function()
	workspace.Alive.ChildRemoved:Connect(function(child)
		if not workspace.Dead:FindFirstChild(child.Name) and child ~= local_player.Character and #workspace.Alive:GetChildren() > 1 then
			return
		end

		if getgenv().kill_effect_Enabled then
			play_kill_effect(child.HumanoidRootPart)
		end
	end)
end)

--// self effect

task.defer(function()
	game:GetService("RunService").Heartbeat:Connect(function()

		if not local_player.Character then
			return
		end

		if getgenv().self_effect_Enabled then
			local effect = game:GetObjects("rbxassetid://17519530107")[1]

			effect.Name = 'nurysium_efx'

			if local_player.Character.PrimaryPart:FindFirstChild('nurysium_efx') then
				return
			end

			effect.Parent = local_player.Character.PrimaryPart
		else

			if local_player.Character.PrimaryPart:FindFirstChild('nurysium_efx') then
				local_player.Character.PrimaryPart['nurysium_efx']:Destroy()
			end
		end

	end)
end)

--// trail

task.defer(function()
	game:GetService("RunService").Heartbeat:Connect(function()

		if not local_player.Character then
			return
		end

		if getgenv().trail_Enabled then
			local trail = game:GetObjects("rbxassetid://17483658369")[1]

			trail.Name = 'nurysium_fx'

			if local_player.Character.PrimaryPart:FindFirstChild('nurysium_fx') then
				return
			end

			local Attachment0 = Instance.new("Attachment", local_player.Character.PrimaryPart)
			local Attachment1 = Instance.new("Attachment", local_player.Character.PrimaryPart)

			Attachment0.Position = Vector3.new(0, -2.411, 0)
			Attachment1.Position = Vector3.new(0, 2.504, 0)

			trail.Parent = local_player.Character.PrimaryPart
			trail.Attachment0 = Attachment0
			trail.Attachment1 = Attachment1
		else

			if local_player.Character.PrimaryPart:FindFirstChild('nurysium_fx') then
				local_player.Character.PrimaryPart['nurysium_fx']:Destroy()
			end
		end

	end)
end)

--// night mode

task.defer(function()
	while task.wait(1) do
		if getgenv().night_mode_Enabled then
			TweenService:Create(game:GetService("Lighting"), TweenInfo.new(3), {ClockTime = 1.9}):Play()
		else
			TweenService:Create(game:GetService("Lighting"), TweenInfo.new(3), {ClockTime = 13.5}):Play()
		end
	end
end)

--// spectate ball

task.defer(function()
    RunService.RenderStepped:Connect(function()
        if getgenv().spectate_Enabled then

            local self = Nurysium_Util.getBall()

            if not self then
                return
            end

            workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(CFrame.new(workspace.CurrentCamera.CFrame.Position, self.Position), 1.5)
        end
    end)
end)

--// shaders

task.defer(function()
	while task.wait(1) do
		if getgenv().shaders_effect_Enabled then
			TweenService:Create(game:GetService("Lighting").Bloom, TweenInfo.new(4), {
				Size = 100,
				Intensity = 2.1
			}):Play()
		else
			TweenService:Create(game:GetService("Lighting").Bloom, TweenInfo.new(3), {
				Size = 3,
				Intensity = 1
			}):Play()
		end
	end
end)

ReplicatedStorage.Remotes.ParrySuccess.OnClientEvent:Connect(function()
	if getgenv().hit_sound_Enabled then
		hit_Sound:Play()
	end

	if getgenv().hit_effect_Enabled then
		local hit_effect = game:GetObjects("rbxassetid://17407244385")[1]

		hit_effect.Parent = Nurysium_Util.getBall()
		hit_effect:Emit(3)

		task.delay(5, function()
			hit_effect:Destroy()
		end)

	end
end)

--// aura

local aura = {
	can_parry = true,
	is_spamming = false,

	parry_Range = 25,
	spam_Range = 0,  
	hit_Count = 0,

	hit_Time = tick(),
	ball_Warping = tick(),
	is_ball_Warping = false,
	last_target = nil
}

--// AI

task.defer(function()
    game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().ai_Enabled and workspace.Alive:FindFirstChild(local_player.Character.Name) then
            local self = Nurysium_Util.getBall()

            if not self or not closest_Entity then
                return
            end

            if not closest_Entity:FindFirstChild('HumanoidRootPart') then
                walk_to(local_player.Character.HumanoidRootPart.Position + Vector3.new(math.sin(tick()) * math.random(35, 50), 0, math.cos(tick()) * math.random(35, 50)))
                return
            end

            local ball_Position = self.Position
            local ball_Speed = self.AssemblyLinearVelocity.Magnitude
            local ball_Distance = local_player:DistanceFromCharacter(ball_Position)

            local player_Position = local_player.Character.PrimaryPart.Position

            local target_Position = closest_Entity.HumanoidRootPart.Position
            local target_Distance = local_player:DistanceFromCharacter(target_Position)
            local target_LookVector = closest_Entity.HumanoidRootPart.CFrame.LookVector

            local resolved_Position = Vector3.zero

            local target_Humanoid = closest_Entity:FindFirstChildOfClass("Humanoid")
            if target_Humanoid and target_Humanoid:GetState() == Enum.HumanoidStateType.Jumping and local_player.Character.Humanoid.FloorMaterial ~= Enum.Material.Air then
                local_player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end

            if (ball_Position - player_Position):Dot(local_player.Character.PrimaryPart.CFrame.LookVector) < -0.2 and tick() % 4 <= 2 then
                return
            end

            if tick() % 4 <= 2 then
                if target_Distance > 10 then
                    resolved_Position = target_Position + (player_Position - target_Position).Unit * 8
                else
                    resolved_Position = target_Position + (player_Position - target_Position).Unit * 25
                end
            else
                resolved_Position = target_Position - target_LookVector * (math.random(8.5, 13.5) + (ball_Distance / math.random(8, 20)))
            end

            if (player_Position - target_Position).Magnitude < 8 then
                resolved_Position = target_Position + (player_Position - target_Position).Unit * 35
            end

            if ball_Distance < 8 then
                resolved_Position = player_Position + (player_Position - ball_Position).Unit * 10
            end

            if aura.is_spamming then
                resolved_Position = player_Position + (ball_Position - player_Position).Unit * 10
            end

            walk_to(resolved_Position + Vector3.new(math.sin(tick()) * 10, 0, math.cos(tick()) * 10))
        end
    end)
end)


ReplicatedStorage.Remotes.ParrySuccessAll.OnClientEvent:Connect(function()
	aura.hit_Count += 1

	task.delay(0.185, function()
		aura.hit_Count -= 1
	end)
end)

task.spawn(function()
    local previousPosition = Vector3.zero  -- Awal yang aman untuk posisi
    local previousTime = tick()

    RunService.PreRender:Connect(function()
        if not getgenv().aura_Enabled then
            return
        end

        if closest_Entity then
            -- Pastikan closest_Entity ada di workspace
            local entity = workspace.Alive:FindFirstChild(closest_Entity.Name)
            if entity and entity:FindFirstChild("HumanoidRootPart") then
                if aura.is_spamming then
                    local currentPosition = entity.HumanoidRootPart.Position
                    local currentTime = tick()

                    local deltaPosition = currentPosition - previousPosition
                    local deltaTime = currentTime - previousTime

                    local speed = deltaTime > 0 and deltaPosition.Magnitude / deltaTime or 0  -- Kecepatan (studs per detik)

                    -- Menyesuaikan waktu spam berdasarkan ping
                    local ping = Stats.Network.ServerStatsItem['Data Ping']:GetValue() / 10  -- Mengambil nilai ping (dalam ms)
                    local adjustedSpamDelay = math.max(0.1, 0.5 - ping / 1000)  -- Menyesuaikan delay spam berdasarkan ping

                    -- Validasi jarak sebelum FireServer
                    if local_player:DistanceFromCharacter(currentPosition) <= aura.spam_Range then
                        parry_remote:FireServer(
                            speed,  -- Mengirim kecepatan ke server
                            CFrame.new(camera.CFrame.Position, Vector3.zero),
                            {[closest_Entity.Name] = currentPosition},
                            {currentPosition.X, currentPosition.Y},
                            false
                        )

                        -- Update posisi dan waktu untuk frame berikutnya
                        previousPosition = currentPosition
                        previousTime = currentTime

                        -- Menunda eksekusi spam sesuai dengan delay yang disesuaikan
                        task.wait(adjustedSpamDelay)
                    end
                end
            end
        end
    end)

	RunService.PreRender:Connect(function()
		if not getgenv().aura_Enabled then
			return
		end

		workspace:WaitForChild("Balls").ChildRemoved:Once(function(child)
			aura.hit_Count = 0
			aura.is_ball_Warping = false
			aura.is_spamming = false
			aura.can_parry = true
			aura.last_target = nil
		end)

		local ping = Stats.Network.ServerStatsItem['Data Ping']:GetValue() / 100

		local self = Nurysium_Util.getBall()

		if not self then
			return
		end

		self:GetAttributeChangedSignal('target'):Once(function()
			aura.can_parry = true
		end)

		self:GetAttributeChangedSignal('from'):Once(function()
			aura.last_target = workspace.Alive:FindFirstChild(self:GetAttribute('from'))
		end)

		if self:GetAttribute('target') ~= local_player.Name or not aura.can_parry then
			return
		end

		get_closest_entity(local_player.Character.PrimaryPart)

		local player_Position = local_player.Character.PrimaryPart.Position
		local player_Velocity = local_player.Character.HumanoidRootPart.AssemblyLinearVelocity
		local player_isMoving = player_Velocity.Magnitude > 0

		local ball_Position = self.Position
		local ball_Velocity = self.AssemblyLinearVelocity

		if self:FindFirstChild('zoomies') then
			ball_Velocity = self.zoomies.VectorVelocity
		end

		local ball_Direction = (local_player.Character.PrimaryPart.Position - ball_Position).Unit
		local ball_Distance = local_player:DistanceFromCharacter(ball_Position)
		local ball_Dot = ball_Direction:Dot(ball_Velocity.Unit)
		local ball_Speed = ball_Velocity.Magnitude
		local ball_speed_Limited = math.min(ball_Speed / 1000, 0.1)

		local target_Position = closest_Entity.HumanoidRootPart.Position
		local target_Distance = local_player:DistanceFromCharacter(target_Position)
		local target_distance_Limited = math.min(target_Distance / 10000, 0.1)
		local target_Direction = (local_player.Character.PrimaryPart.Position - closest_Entity.HumanoidRootPart.Position).Unit
		local target_Velocity = closest_Entity.HumanoidRootPart.AssemblyLinearVelocity
		local target_isMoving = target_Velocity.Magnitude > 0
		local target_Dot = target_isMoving and math.max(target_Direction:Dot(target_Velocity.Unit), 0)

                aura.spam_Range = math.max(ping / 10, 10.5) + ball_Speed / 6.15
		speedFactor = 3 - (ping / 100)
    speedFactorPingBased = 6.1 - (ping / 100)
    aura.parry_Range = math.max(math.max(ping, 3.5) + ball_Speed / speedFactor, speedFactorPingBased)

		if target_isMoving then
            aura.is_spamming = (aura.hit_Count > 1 or (target_Distance < 11 and ball_Distance < 10)) and ball_Dot > -0.25
        else
            aura.is_spamming = (aura.hit_Count > 1 or (target_Distance < 11.5 and ball_Distance < 10))
        end

		if ball_Dot < -0.2 then
			aura.ball_Warping = tick()
		end

		task.spawn(function()
			if (tick() - aura.ball_Warping) >= 0.15 + target_distance_Limited - ball_speed_Limited or ball_Distance < 10 then
				aura.is_ball_Warping = false
				return
			end

			if (ball_Position - aura.last_target.HumanoidRootPart.Position).Magnitude > 35.5 or target_Distance <= 12 then
				aura.is_ball_Warping = false
				return
			end

			aura.is_ball_Warping = true
		end)

		if ball_Distance <= aura.parry_Range and not aura.is_ball_Warping and ball_Dot > -0.1 then

local cf = camera.CFrame

            if getgenv().auto_curve_Enabled then
    parry_remote:FireServer(
        0,
        CFrame.new(camera.CFrame.Position, Vector3.new(
            math.random(-1000, 1000),
            math.random(0, 1000),
            math.random(100, 1000)
        )),
        {[closest_Entity.Name] = target_Position},
        {target_Position.X, target_Position.Y},
        false
    )
else
        local x, y, z, R00, R01, R02, R10, R11, R12, R20, R21, R22 = cf:GetComponents()
            parry_remote:FireServer(
                0,
                CFrame.new(x, y, z, R00, R01, R02, R10, R11, R12, R20, R21, R22),
                {[closest_Entity.Name] = targetPosition},
                {target_Position.X, target_Position.Y},
                false
            )
end

			aura.can_parry = false
			aura.hit_Time = tick()
			aura.hit_Count += 1

			task.delay(0.2, function()
				aura.hit_Count -= 1
			end)
		end

		task.spawn(function()
			repeat
				RunService.PreRender:Wait()
			until (tick() - aura.hit_Time) >= 1
			    aura.can_parry = true
		end)
	end)
end)

initializate('nurysium_temp')

local self = Nurysium_Util.getBall()
	wait(0.1)
	local Visualize = Instance.new("Part",workspace)
	local Visualize1 = Instance.new("Part",workspace)
	wait(0.5)
	Visualize.Color = Color3.new(0, 0, 0)
	Visualize.Material = Enum.Material.ForceField
	Visualize.Transparency = 0.5
	Visualize.Anchored = true
	Visualize.CanCollide = false
	Visualize.CastShadow = false
	Visualize.Shape = Enum.PartType.Ball
	Visualize.Size = Vector3.new(30,30,30)
	Visualize1.Color = Color3.new(1, 0, 0)
	Visualize1.Material = Enum.Material.ForceField
	Visualize1.Transparency = 0.5
	Visualize1.Anchored = true
	Visualize1.CanCollide = false
	Visualize1.CastShadow = false
	Visualize1.Shape = Enum.PartType.Ball
	Visualize1.Size = Vector3.new(aura.spam_Range, aura.spam_Range, aura.spam_Range)

	local Highlight1 = Instance.new("Highlight")
	Highlight1.Parent = Visualize1
	Highlight1.Enabled = true
	Highlight1.FillTransparency = 0
	Highlight1.OutlineColor = Color3.new(1, 1, 1)
	local Highlight = Instance.new("Highlight")
	Highlight.Parent = Visualize
	Highlight.Enabled = true
	Highlight.FillTransparency = 0
	Highlight.OutlineColor = Color3.new(1, 1, 1)
	
task.spawn(function()
RunService.RenderStepped:Connect(function()
		if getgenv().visualize_Enabled then
			Visualize.Transparency = 0
			Visualize.Material = Enum.Material.ForceField
			Visualize.Size = Vector3.new(aura.parry_Range, aura.parry_Range, aura.parry_Range)
			Visualize.CFrame = CFrame.new(local_player.Character.PrimaryPart.Position)
			Visualize1.Transparency = 0
			Visualize1.Material = Enum.Material.ForceField
			Visualize1.Size = Vector3.new(aura.spam_Range, aura.spam_Range, aura.spam_Range)
			Visualize1.CFrame = CFrame.new(local_player.Character.PrimaryPart.Position)
		else
			Visualize.Material = Enum.Material.ForceField
			Visualize.Transparency = 1
			Visualize1.Material = Enum.Material.ForceField
			Visualize1.Transparency = 1
		end	
	end)
end)

local function optimizePerformance()
    -- Boost FPS by disabling unnecessary features and reducing settings
    game:GetService("Workspace").StreamingEnabled = true
    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01 -- Lowest quality for best FPS
    game:GetService("Lighting").GlobalShadows = false -- Disable shadows
    game:GetService("Lighting").Brightness = 2 -- Adjust lighting for smoothness
    game:GetService("UserInputService").MouseDeltaSensitivity = 0.5 -- Reduce mouse lag
    setfpscap(120) -- Increase FPS cap to 120 for smoother performance
    
    -- Optimize memory usage
    local function optimizeMemoryUsage()
        local serviceMemoryLimits = {
            ['Players'] = 2048,
            ['Workspace'] = 2048,
            ['ReplicatedStorage'] = 2048,
            -- Add more services as needed
        }

        for serviceName, limit in pairs(serviceMemoryLimits) do
            local service = game:GetService(serviceName)
            if service then
                -- Assuming there is a method to set memory limit
                -- Uncomment if such a method exists
                -- service:SetMemoryLimit(limit)
            end
        end
    end
    optimizeMemoryUsage()
end

optimizePerformance()
